
# check if have packages and install them if not present
TCGA.libs <- c("TCGAbiolinks","SummarizedExperiment","BiocInstaller","data.table","reshape2","plotly");
new.libs <- TCGA.libs[!(TCGA.libs %in% installed.packages() [,"Package"])]
if(length(new.libs)) {
  source("https://bioconductor.org/biocLite.R")
  biocLite(new.libs)
}

# load in the libraries to R
library("TCGAbiolinks")
library("SummarizedExperiment")
library("R.utils")
library("BiocInstaller")
library("iheatmapr")
library("reshape2")
library("data.table")
library("plotly")

# install iheatmapr
devtools::install_github("AliciaSchep/iheatmapr")

# Prepare data table from the MAF file 
mut <- top.mut.data
genes <- top.mut.genes
annotation <- joined.clin.data.banded

rm.empty.columns <- FALSE
information <- "Variant_Type"

mut <- setDT(mut)
str(mut)
mut$value <- 1
if(rm.empty.columns == FALSE) all.samples <- unique(mut$Tumor_Sample_Barcode)

mut$Hugo_Symbol <- as.character(mut$Hugo_Symbol)
if(!missing(genes) & !is.null(genes)) mut <- subset(mut, mut$Hugo_Symbol %in% genes)

if(!rm.empty.columns){
    formula <- paste0("Tumor_Sample_Barcode + Hugo_Symbol ~ ", information)
    suppressMessages({mat <- dcast(mut, as.formula(formula),value.var = "value",fill = 0,drop = FALSE)})
} else {
    formula <- paste0("Tumor_Sample_Barcode + Hugo_Symbol ~ ", information)
    suppressMessages({mat <- dcast(mut, as.formula(formula),value.var = "value",fill = 0,drop = TRUE)})
}
columns <- colnames(mat)[-c(1:2)]

mat$value <- ""
mat <- setDT(mat)
for ( i in columns){
    mat[,i] <-  replace(mat[,i,with = FALSE],mat[,i,with = FALSE]>0,paste0(i,";"))
    mat[,i] <-  replace(mat[,i,with = FALSE],mat[,i,with = FALSE]==0,"")
    mat[,value:=paste0(value,get(i))]
}
str(mat)

write.table(mat, "patientmutations.csv", sep=",", row.names=FALSE)

mutation.type <- c()
for (i in columns){
    if(length(grep(i,mat$value)) > 0) mutation.type <- c(mutation.type,i)
}

mat <- setDF(dcast(mat, Tumor_Sample_Barcode~Hugo_Symbol, value.var="value",fill=""))
    rownames(mat) <- mat[,1]
    mat <- mat[,-1]

if(rm.empty.columns == FALSE) {
        aux <- data.frame(row.names = all.samples[!all.samples %in% rownames(mat)])
        if(nrow(aux) > 0) {
            aux[,colnames(mat)] <- ""
            mat <- rbind(mat,aux)
        }
    }

write.table(mat, "patientmutations2.csv", sep=",", row.names=FALSE)

mat <- t(mat)



idx <- match(substr(colnames(mat),1,12),annotation$bcr_patient_barcode)
annotation <- annotation[idx,]
annotation$bcr_patient_barcode <- NULL

collumn.names <- c("race","gender","vital_status","tumor_stage")

annotation <- annotation[collumn.names]

write.table(mat, "patientmutationsfinal.csv", sep=",", row.names=TRUE, col.names=NA)
write.table(annotation, "annotattionsfinal.csv", sep=",", row.names=TRUE, col.names=NA)





annotation <- t(annotation)

annotation <- as.data.frame(annotation)

mat <- as.data.frame(mat)

mat.colnams <- colnames(mat)

colnames(annotation) <- mat.colnams



write.table(mat, "patientmutationsfinalnew.csv", sep=",", row.names=TRUE, col.names=NA)
write.table(annotation, "annotattionsfinalnew.csv", sep=",", row.names=TRUE, col.names=FALSE)

montray <- rbind(mat, annotation)

write.table(montray, "ultimateoncoprint.csv", sep=",", row.names=TRUE, col.names=NA)

testmatrix <- read.csv("testmatrix.csv", row.names=1)


testmatrix <- as.matrix(testmatrix)

samplenames1 <- colnames(montray)

samplenames <- str(samplenames1)

nameofoncoprint <- paste(args1," Mutations Profile", sep="")





main_heatmap(testmatrix, name = "Mutations<br>Profile", x_categorical = FALSE,
             font = list(size = 8)) %>%


add_col_groups(
  ifelse("white" %in% colnames(testmatrix),
        "white", 
        ifelse("black" %in% colnames(testmatrix),
               "black", 
               ifelse("asian" %in% colnames(testmatrix),
                      "yellow" ,
                      "not reported"))),
                  side = "bottom", name = "Sample<br>Race",
                  title = "Race",
                  colors = c("white","brown","yellow", "grey")) %>%

  add_col_labels(ticktext = samplenames,font = list(size = 8)) %>%
  add_row_labels(size = 0.3,font = list(size = 6)) %>% 
  add_col_summary(layout = list(title = "Clinical<br>Patient<br>Samples"),
                  yname = "summary")  %>%                 
  add_col_title("TCGA Clinical Patient Samples", side= "top") %>%
  add_row_summary(groups = TRUE, 
                  type = "bar",
                  layout = list(title = "Average<br>per<br>year",
                                font = list(size = 8)))


